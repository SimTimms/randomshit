/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from 'react';
import { useGLTF } from '@react-three/drei';
import Mesh from '../Mesh';
import edging from '../Base/edging.png';

export default function Model({ props }) {
  const group = useRef();
  const { nodes } = useGLTF(`${props.gltfIn}`);
  if (!nodes) {
    return 'Loading';
  }

  function node(nodeArr) {
    let nodeMap = [];
    if (nodeArr) {
      nodeMap = nodeArr.map((item) => {
        const nodeChildArr = Object.values(item.children);
        return item.geometry ? (
          <Mesh
            activeColor={props.activeColor}
            paintMode={props.paintMode}
            modelColors={props.modelColors}
            modelColorsRef={props.modelColorsRef}
            name={item.name}
            lightOne={props.lightOne}
            geometry={nodes[item.name].geometry}
            scale={item.scale}
            position={item.position}
          >
            {node(nodeChildArr, nodes)}
          </Mesh>
        ) : item.type === 'group' ? (
          <group
            position={item.position}
            scale={item.scale}
            rotation={item.rotation}
          >
            {node(nodeChildArr, nodes)}
          </group>
        ) : null;
      });
    }
    return nodeMap.filter((item) => item !== null);
  }
  const nodeArr = Object.values(nodes);
  return (
    <group ref={group} {...props} dispose={null}>
      {node(nodeArr, nodes)}
    </group>
  );
  return (
    <group ref={group} {...props} dispose={null}>
      <Mesh
        activeColor={props.activeColor}
        paintMode={props.paintMode}
        modelColors={props.modelColors}
        modelColorsRef={props.modelColorsRef}
        name="Cylinder"
        lightOne={props.lightOne}
        geometry={nodes.Cylinder.geometry}
        scale={[4.05, -0.34, 4.05]}
        texture={edging}
      />
      <Mesh
        activeColor={props.activeColor}
        paintMode={props.paintMode}
        modelColors={props.modelColors}
        modelColorsRef={props.modelColorsRef}
        name="Cylinder001"
        lightOne={props.lightOne}
        geometry={nodes.Cylinder001.geometry}
        position={[0, 0.37, 0]}
        scale={[3.73, -0.05, 3.73]}
        texture={edging}
      />
    </group>
  );
}
